// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id        String @id @db.Uuid
  userName  String
  email     String @unique
  passeword String

  books book[]

  @@map("users")
}

model book {
  id        String   @id @db.Uuid
  title     String
  tagId     String?  @db.Uuid @map("tag_id")
  tag       tag?     @relation(fields: [tagId], references: [id])
  price     String?  @map("price")
  userId    String   @db.Uuid @map("user_id")
  user      user     @relation(fields: [userId], references: [id])
  storageId String?  @db.Uuid @map("storage_id")
  storage   storage? @relation(fields: [storageId], references: [id])
  addedAt   DateTime @default(now()) @map("added_at") @db.Timestamptz(0)
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamptz(0)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(0)

  @@map("books")
}

model storage {
  id        String   @id @db.Uuid
  name      String?
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamptz(0)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(0)
  books     book[]

  @@map("storages")
}

model tag {
  id        String   @id @db.Uuid
  name      String
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamptz(0)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(0)
  books     book[]

  @@map("tags")
}
